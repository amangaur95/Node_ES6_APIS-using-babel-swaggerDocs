{
  "swagger": "2.0",
  "title": "Rk_Music API Documentation",
  "description": "MUSIC API",
  "license": {
    "name": "MIT",
    "url": "https://opensource.org/licenses/MIT"
  },
  "version": "1.0.0",
  "host": "localhost:8000",
  "basePath": "/api",
  "tags": [{
    "name": "Songs",
    "description": "API for Songs Endpoints"
  }],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/songs": {
      "post": {
        "tags": ["Songs"],
        "summary": "Api Endpoint for create Song",
        "description": "Create new Song in database",
        "parameters": [{
          "name": "song",
          "description": "Song prams to create new song",
          "in": "body",
          "required": "true",
          "schema": {
            "$ref": "#definitions/Song"
          }
        }],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "new song created",
            "schema": {
              "$ref": "#definitions/Song"
            }
          }
        }
      },
      "get": {
        "tags": ["Songs"],
        "summary": "Api Endpoint for ALL Songs",
        "description": "Fetching all Song from database",
        "parameters": [{
          "name": "page",
          "type":"integer",
          "description": "Define Page index for the record",
          "in": "query"
        },
        {
          "name": "perPage",
          "type":"integer",
          "description": "Define limit for the records e.g 10",
          "in": "query"
        }
      ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "ALl the songs",
            "schema": {
              "$ref": "#definitions/Songs"
            }
          }
        }
      }
    },
    "/songs/{id}":{
      "parameters":[
      {
        "name":"id",
        "in":"path",
        "required":"true",
        "description":"id of song",
        "type":"string"
      }
      ],
      "get":{
        "tags": ["Songs"],
        "summary": "Api Endpoint for find single Songs",
        "description": "Fetching one Song from database",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Song is found",
            "schema": {
              "$ref": "#definitions/Song"
            }
          }
        }
      },
      "delete":{
        "tags": ["Songs"],
        "summary": "Api Endpoint for delete single Songs",
        "description": "Fetching one Song and delteing from database",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Song is Deleted",
            "schema": {
              "$ref": "#definitions/Song"
            }
          }
        }
      },
      "put": {
        "tags": ["Songs"],
        "summary": "Api Endpoint for updating existing Song",
        "description": "Update existing Song in database",
        "parameters": [{
          "name": "song",
          "description": "Song prams to update existing song",
          "in": "body",
          "schema": {
            "$ref": "#definitions/UpdateSong"
          }
        }],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Song is Updated",
            "schema": {
              "$ref": "#definitions/Song"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Song": {
      "required": ["title", "url"],
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "rating": {
          "type": "integer",
          "format": "Int32"
        }
      }
    },
    "UpdateSong":{
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "rating": {
          "type": "integer",
          "format": "Int32"
        }
      }
    },
    "Songs": {
      "properties": {
        "docs": {
          "type": "array",
          "items":{
          "$ref":"#definitions/Song"
          }
        },
        "total": {
          "type": "integer"
        },
        "pages": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "page":{
          "type":"integer"
        }
      }
    }
  }
}